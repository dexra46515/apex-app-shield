# Envoy Proxy Configuration for WAF Integration
# Alternative to Nginx for customers who prefer Envoy

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              format: |
                [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                waf_action="%RESP(X-WAF-ACTION)%" waf_reason="%RESP(X-WAF-REASON)%"
          
          http_filters:
          # Rate limiting filter
          - name: envoy.filters.http.local_ratelimit
            typed_config:
              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
              type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
              value:
                stat_prefix: rate_limiter
                token_bucket:
                  max_tokens: 100
                  tokens_per_fill: 100
                  fill_interval: 60s
                filter_enabled:
                  runtime_key: rate_limit_enabled
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                filter_enforced:
                  runtime_key: rate_limit_enforced
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
          
          # WAF External Authorization Filter
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              http_service:
                server_uri:
                  uri: "YOUR_SUPABASE_URL/functions/v1/inline-waf"
                  cluster: waf_service
                  timeout: 0.1s  # 100ms timeout
                authorization_request:
                  allowed_headers:
                    patterns:
                    - exact: "authorization"
                    - exact: "content-type"
                    - exact: "user-agent"
                    - exact: "x-forwarded-for"
                    - exact: "x-real-ip"
                  headers_to_add:
                  - key: "x-waf-check"
                    value: "true"
                authorization_response:
                  allowed_upstream_headers:
                    patterns:
                    - exact: "x-waf-action"
                    - exact: "x-waf-reason"
                    - exact: "x-waf-score"
                  allowed_client_headers:
                    patterns:
                    - exact: "x-waf-action"
                failure_mode_allow: true  # Fail open on WAF error
          
          # Router filter (must be last)
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/health"
                direct_response:
                  status: 200
                  body:
                    inline_string: "OK"
              - match:
                  prefix: "/waf/status"
                direct_response:
                  status: 200
                  body:
                    inline_string: '{"status":"active","version":"1.0.0"}'
              - match:
                  prefix: "/"
                route:
                  cluster: backend_service
                  timeout: 30s

  clusters:
  # Customer's backend application
  - name: backend_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: backend_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: your-backend-service
                port_value: 80
    health_checks:
    - timeout: 1s
      interval: 5s
      unhealthy_threshold: 2
      healthy_threshold: 2
      http_health_check:
        path: "/health"

  # WAF Service
  - name: waf_service
    connect_timeout: 0.1s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: waf_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: YOUR_SUPABASE_URL
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: YOUR_SUPABASE_URL