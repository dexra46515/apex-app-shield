# ANA WAF - Environment Configuration
# Copy this file to .env and update with your values

# ===============================================
# REQUIRED - WAF Core Configuration
# ===============================================

# Your application backend (where WAF forwards traffic)
WAF_UPSTREAM=host.docker.internal:3000

# WAF operation mode: monitor (log only) or protect (block threats)
WAF_MODE=protect

# Logging level: debug, info, warn, error
WAF_LOG_LEVEL=info

# Enable debug features (set to false in production)  
WAF_DEBUG=true

# Enable request replay functionality
WAF_ENABLE_REPLAY=true

# ===============================================
# REQUIRED - Supabase Backend Integration
# ===============================================

# Get these from: https://supabase.com/dashboard/project/[your-project]/settings/api
SUPABASE_URL=https://your-project-ref.supabase.co
SUPABASE_ANON_KEY=your-anon-key-here
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# ===============================================
# OPTIONAL - Rate Limiting & Security
# ===============================================

# Global rate limit (requests per minute per IP)
RATE_LIMIT_GLOBAL=100

# Strict rate limit for suspicious IPs
RATE_LIMIT_STRICT=10

# Rate limit window in minutes
RATE_LIMIT_WINDOW=1

# Block requests from specific countries (comma-separated ISO codes)
GEO_BLOCK_COUNTRIES=CN,RU,KP

# Allow requests only from specific countries (leave empty to allow all)
GEO_ALLOW_COUNTRIES=

# ===============================================
# OPTIONAL - Monitoring & Alerting
# ===============================================

# Grafana admin password (change from default!)
GRAFANA_ADMIN_PASSWORD=admin

# Prometheus retention period
PROMETHEUS_RETENTION=15d

# Alert webhook URL for security events
ALERT_WEBHOOK_URL=

# Email notifications for critical security events
ALERT_EMAIL=

# ===============================================
# OPTIONAL - SSL/TLS Configuration
# ===============================================

# Enable HTTPS on WAF proxy (requires SSL certificates)
SSL_ENABLED=false

# SSL certificate paths (if SSL_ENABLED=true)
SSL_CERT_PATH=/etc/ssl/certs/waf.crt
SSL_KEY_PATH=/etc/ssl/private/waf.key

# SSL protocols (recommended: TLSv1.2 TLSv1.3)
SSL_PROTOCOLS=TLSv1.2 TLSv1.3

# ===============================================
# OPTIONAL - Advanced Features
# ===============================================

# Custom security rules file path
CUSTOM_RULES_PATH=/usr/local/openresty/waf/custom-rules.yaml

# Enable AI-powered threat detection (requires additional setup)
AI_THREAT_DETECTION=false

# Honeypot integration (requires honeypot service)
HONEYPOT_ENABLED=false
HONEYPOT_URL=

# Enable request/response body inspection (impacts performance)
INSPECT_BODY=true

# Maximum request body size to inspect (in MB)
MAX_BODY_SIZE=10

# ===============================================
# OPTIONAL - Performance Tuning
# ===============================================

# Number of worker processes (default: auto-detect CPU cores)
WORKER_PROCESSES=auto

# Worker connections per process
WORKER_CONNECTIONS=1024

# Enable request caching (improves performance)
ENABLE_CACHING=true

# Cache size in MB
CACHE_SIZE=100

# Request timeout in seconds
REQUEST_TIMEOUT=30

# ===============================================
# OPTIONAL - Development & Testing
# ===============================================

# Enable development mode (more verbose logging, relaxed security)
DEV_MODE=true

# Bypass WAF for specific IP addresses (comma-separated)
BYPASS_IPS=127.0.0.1,::1

# Test mode: allows known test patterns without blocking
TEST_MODE=false

# Mock upstream for testing (when no real backend available)
MOCK_UPSTREAM=false

# ===============================================
# OPTIONAL - Integration Settings  
# ===============================================

# CLI API endpoint (for ana-waf CLI tool)
CLI_API_ENDPOINT=http://localhost:9090

# GitOps repository URL for policy sync
GITOPS_REPO_URL=

# GitOps branch to sync policies from
GITOPS_BRANCH=main

# GitOps webhook secret for automatic sync
GITOPS_WEBHOOK_SECRET=

# External logging endpoint (e.g., ELK stack, Splunk)
EXTERNAL_LOG_ENDPOINT=

# ===============================================
# EXAMPLES - Common Configurations
# ===============================================

# Example 1: React Development Server
# WAF_UPSTREAM=host.docker.internal:3000
# WAF_MODE=monitor
# WAF_DEBUG=true

# Example 2: Node.js API Server  
# WAF_UPSTREAM=host.docker.internal:8080
# WAF_MODE=protect
# RATE_LIMIT_GLOBAL=200

# Example 3: Production Deployment
# WAF_UPSTREAM=backend-service:80
# WAF_MODE=protect
# SSL_ENABLED=true
# WAF_DEBUG=false
# GRAFANA_ADMIN_PASSWORD=secure-password-here

# ===============================================
# NOTES
# ===============================================

# 1. For production deployment, set WAF_DEBUG=false
# 2. Change default passwords (GRAFANA_ADMIN_PASSWORD)  
# 3. Use strong SUPABASE_SERVICE_ROLE_KEY and keep it secure
# 4. Consider enabling SSL_ENABLED for production traffic
# 5. Set appropriate rate limits based on your application's traffic patterns
# 6. Test in monitor mode before switching to protect mode